def Prog4():
  # Global parameters:
  global speed_ms    = 0.250
  global speed_rads  = 0.750
  global accel_mss   = 1.200
  global accel_radss = 1.200
  global blend_radius_m = 0.001
  global ref_frame = p[0,0,0,0,0,0]
  
  #--------------------------
  # Add any default subprograms here
  # For example, to drive a gripper as a program call:
  # def Gripper_Open():
  #   ...
  # end
  #
  # Example to drive a spray gun:
  def SprayOn(value):
    # use the value as an output:
    DO_SPRAY = 5
    if value == 0:
      set_standard_digital_out(DO_SPRAY, False)
    else:
      set_standard_digital_out(DO_SPRAY, True)
    end
  end

  # Example to drive an extruder:
  def Extruder(value):
    # use the value as an output:
    if value < 0:
      # stop extruder
    else:
      # start extruder
    end
  end
  
  # Example to move an external axis
  def MoveAxis(value):
    # use the value as an output:
    DO_AXIS_1 = 1
    DI_AXIS_1 = 1
    if value <= 0:
      set_standard_digital_out(DO_AXIS_1, False)
      
      # Wait for digital input to change state
      #while (get_standard_digital_in(DI_AXIS_1) != False):
      #  sync()
      #end
    else:
      set_standard_digital_out(DO_AXIS_1, True)
      
      # Wait for digital input to change state
      #while (get_standard_digital_in(DI_AXIS_1) != True):
      #  sync()
      #end
    end
  end
  #--------------------------
  
  x = magasin_origo[0]
  y = magasin_origo[1]
  z = magasin_origo[2]
  rx = magasin_origo[3]
  ry = magasin_origo[4]
  rz = magasin_origo[5]
  radios = 53
  
  # Main program:
  # Program generated by RoboDK v5.5.1 for UR10 on 24/11/2022 13:20:08
  ref_frame = p[x, y, z, rx, ry, rz]
  set_tcp(p[0.000000, -0.020000, 0.130000, 0.000000, 0.000000, 0.000000])
  movel(pose_trans(ref_frame,p[0.100000, 0.250000, -0.100000, 0.000000, 0.000000, 0.000000]),accel_mss,speed_ms,0,0)
  sleep(1.000)
  movel(pose_trans(ref_frame,p[(radios + 30)/1000, (radios + 110)/1000, -0.100000, 0.000000, 0.000000, 0.000000]),accel_mss,speed_ms,0,0) # end trace
  tfg_grip(10, 80, external_grip=True,stop_if_no_force=False,tool_index=0, blocking=True)
  sleep(1.000)
  movel(pose_trans(ref_frame,p[(radios + 30)/1000, (radios + 110)/1000, 0.100000, 0.000000, 0.000000, 0.000000]),accel_mss,speed_ms,0,0) # end trace
  tfg_grip((radios*2)-1, 100, external_grip=False,stop_if_no_force=True,tool_index=0, blocking=True)
  sleep(1.000)
  movel(pose_trans(ref_frame,p[(radios + 30)/1000, (radios + 250)/1000, 0.080000, 0.000000, 0.000000, 0.000000]),accel_mss,speed_ms,0,blend_radius_m)
  sleep(1.000)
  movel(pose_trans(ref_frame,p[(radios + 30)/1000, (radios + 250)/1000, -0.100000, 0.000000, 0.000000, 0.000000]),accel_mss,speed_ms,0,blend_radius_m)
  sleep(1.000)
  # End of main program
end

Prog4()
